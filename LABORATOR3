#include <iostream>
#include <string.h>

//#include <bits/stdc++.h>
using namespace std;

class Student{
// private, protected, public;
    private:
        const int ID_Matricol;
        int varsta;
        char* nume;
        int nrNote;
        int* note;

    public:
        static int anCurent;
        static void mesaj(){
        cout<<"bine ati venit studenti de anul "<<anCurent<<endl;
        //cout<<"bine ati venit studenti de anul "<<this->nrNote;
        }

        Student():ID_Matricol(00000){                      //constructor fara parametrii
            varsta=0;
            nume=new char[strlen("Anonim")+1];       //aloc zona de memorie de 7 caractere
            strcpy(this->nume,"Anonim");                   //copiaza in this->nume stringul Anonim. Pe atributul nume are Anonim

        }

        Student(int id, int varsta, char* nume, int nrNote, int* note):ID_Matricol(1){        //sau int varsta1 ...
                                                                                     //                   varsta=varsta1
            this->varsta=varsta;
            this->nume=new char[strlen(nume)+1];
            strcpy(this->nume,nume);

            this->nrNote=nrNote;

            this->note = new int[nrNote];
            for(int i=0;i<nrNote;i++)
                this->note[i]=note[i];

        }

        Student(int varsta):ID_Matricol(00){

            this->varsta=varsta;
        }

    void afisare(){
        cout<<"Student "<<this->nume<<" are urmatoarele note: ";
        for(int i=0;i<this->nrNote;i++)
            cout<<this->note[i]<<" ";
        cout<<endl;
    }

//getters
    int getNrNote(){
        return this->nrNote;
    }

    char* getNume(){                       //am nevoie de un pointer, get returneaza pointer catre zona de adresa a lui nume
        return this->nume;
    }

    int* getNote(){
        return this->note;
    }
    int getVarsta(){
        return this->varsta;
    }
//setters
    void setVarsta(int a){
        this->varsta=a;
    }
    void setNume(char* a){
        if(this->nume!=nullptr)
            delete[] this->nume;

        this->nume= new char[strlen(a)+1];
        strcpy(this->nume,a);
    }
    void setNote(int* a,int b){           //b-nr de note
        if(this->note!=nullptr)
            delete[] this->note;

        this->nrNote=b;
        this->note=new int[b];

        for(int i=0;i<b;i++)
            this->note[i]=a[i];
    }
//metoda
    float medieStudent(){
        float medie_note;
        for(int i=0;i<this->nrNote;i++)
            medie_note+=this->note[i];
        medie_note/=this->nrNote;

        return medie_note;
    }

    ~Student(){                          //destructor
        if(this->note!=nullptr)
            delete[] this->note;
        if(this->nume!=nullptr)
            delete[] this->nume;

    }

};

int Student::anCurent=2;                 //declarare globala

int main()
{                                            //get da datele, post aduce datele
/*
    cout<<Student::anCurent;*/
    Student::mesaj();


    Student s;

    char nume[]={"POO"};
    char nume2[]={"POO2"};
    int pinguin[]={5,6,7,8};
    int pinguin2[]={5,6,7,8,10};

    Student s2(101,3,nume,4,pinguin);
    s2.afisare();
    cout<<"------------------------------------------\n";

    cout<<s2.getNume()<<endl;
    s2.setNume(nume2);
    s2.setVarsta(24);
    s2.setNote(pinguin2,5);
    //cout<<s2.getNume()<<endl;
    cout<<"------------------------------------------\n";
/*
    int* note=s2.getNote();
    for(int i=0;i<s2.getNrNote();i++)                       //le mai afisam o data mai  jos
        cout<<*(note+i)<<" ";
        cout<<endl;
    cout<<"------------------------------------------\n";
*/
    cout<<s2.getVarsta()<<endl;

    //cout<<s2.getVarsta()<<endl;
    cout<<"------------------------------------------\n";
    int* note2=s2.getNote();
    for(int i=0;i<s2.getNrNote();i++)
        cout<<*(note2+i)<<" "<<endl;

    cout<<endl<<endl;


    int* note3=s2.getNote();
    for(int i=0;i<s2.getNrNote();i++)
        cout<<*(note3+i)<<" "<<endl;

    cout<<"------------------------------------------\n";
        cout<<s2.medieStudent();

    return 0;
}
