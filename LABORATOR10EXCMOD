#include <iostream>
#include <exception>
#include <stdexcept>

using namespace std;
using std::runtime_error;

double Fractie(int numarator, int numitor){

    if(numitor==0)
       throw runtime_error(" Numitorul este 0 ");

    return  (double)numarator/numitor;

}

class ExceptiaMea:public exception{

public:
    virtual const char*what()const throw(){

        return " Exceptia mea ";

    }


} exceptiaMea;

void functiaMea(int a){

        if(a==10) throw exceptiaMea;
        if(a==0) throw 10;
        if(a==9) throw 9;
        if(a>0) throw 3.4;
        if(a<0) throw 'a';



}



int main()
{
/*
try{
    cout<<Fractie(3,0);
    cout<<"Ceva 2";
}

catch(exception& e){

    cout<<e.what();
    cout<<"Am prins exceptie de runtime";

}
cout<<" ceva1 ";
*/


int a=9;

try{
        cout<<"\n Ceva 1 \n";

            try{

                cout<<"\n Ceva 4 \n";

                functiaMea(a);

                cout<<"\n Ceva 5 \n";


            }
            catch(double){

                cout<<"S-a prins double ";

            }

        cout<<"\n Ceva 2\n";
}
catch(int a){

    if(a==9)
     cout<<"Am prins un 9 ";
    if(a==10)
        cout<<"Am prins 10";

}
catch(...){

    cout<<"Am prins o exceptie necunoscuta ";

}
cout<<"\n ceva3\n";


    return 0;
}
  
